adr_id: 003
title: "Pricing Method Structure"
status: Accepted
date: 2025-03-11
context: |
  Pricing models require specific numerical techniques and assumptions. To maintain modularity, these methods should be encapsulated in separate objects.

decision: |
  - Define a `pricingMethod` type that subtypes `AbstractPricingMethod`.
  - This struct should contain configuration details for the pricing technique (e.g., finite difference grid size, Monte Carlo paths) but should not include the pricing algorithm itself.
  - Pricing functions should be implemented separately and dispatched based on `(payoff, marketInputs, pricingMethod)`.

consequences:
  positive:
    - "Allows pricing techniques to be swapped independently of payoffs and market inputs."
    - "Enables efficient method specialization using Julia's multiple dispatch."
  negative:
    - "Requires defining a struct for each pricing method instead of using a simple function call."

alternatives:
  - name: "Embed pricing logic inside market inputs or payoffs"
    pros: "Removes the need for separate pricing method objects."
    cons: "Mixes concerns and reduces flexibility when changing pricing approaches."

references: